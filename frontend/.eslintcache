[{"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/index.js":"1","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/App.js":"2","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/reportWebVitals.js":"3","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientAdd.js":"4","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/dashboard/Dashboard.js":"5","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/Clients.js":"6","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientSingle.js":"7","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductAdd.js":"8","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientEdit.js":"9","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/Products.js":"10","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackAdd.js":"11","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/about/About.js":"12","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductSingle.js":"13","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductEdit.js":"14","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackEdit.js":"15","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackSingle.js":"16","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/Feedbacks.js":"17","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/sidebar/Sidebar.js":"18","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductList.js":"19","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/csat_doughnut.js":"20","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/csat_line.js":"21","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/activity_area.js":"22","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/gauge_chart.js":"23","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackList.js":"24","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientList.js":"25","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/utils/csatEmoji.js":"26","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/utils/sentEmoji.js":"27"},{"size":507,"mtime":1610081236886,"results":"28","hashOfConfig":"29"},{"size":1944,"mtime":1612078689966,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1609779003949,"results":"31","hashOfConfig":"29"},{"size":9424,"mtime":1611351640258,"results":"32","hashOfConfig":"29"},{"size":3807,"mtime":1613289171700,"results":"33","hashOfConfig":"29"},{"size":1635,"mtime":1610638262066,"results":"34","hashOfConfig":"29"},{"size":6267,"mtime":1613289478204,"results":"35","hashOfConfig":"29"},{"size":9424,"mtime":1611669559893,"results":"36","hashOfConfig":"29"},{"size":7777,"mtime":1610634674952,"results":"37","hashOfConfig":"29"},{"size":1735,"mtime":1611668734996,"results":"38","hashOfConfig":"29"},{"size":6138,"mtime":1612032630724,"results":"39","hashOfConfig":"29"},{"size":3105,"mtime":1612082795021,"results":"40","hashOfConfig":"29"},{"size":6531,"mtime":1613291860469,"results":"41","hashOfConfig":"29"},{"size":7777,"mtime":1611669573485,"results":"42","hashOfConfig":"29"},{"size":7777,"mtime":1611646144536,"results":"43","hashOfConfig":"29"},{"size":9637,"mtime":1613362367494,"results":"44","hashOfConfig":"29"},{"size":1726,"mtime":1611667172899,"results":"45","hashOfConfig":"29"},{"size":1291,"mtime":1612080453767,"results":"46","hashOfConfig":"29"},{"size":4091,"mtime":1613715925660,"results":"47","hashOfConfig":"29"},{"size":1664,"mtime":1612984100763,"results":"48","hashOfConfig":"29"},{"size":714,"mtime":1613360279296,"results":"49","hashOfConfig":"29"},{"size":696,"mtime":1611645823912,"results":"50","hashOfConfig":"29"},{"size":3909,"mtime":1613362782302,"results":"51","hashOfConfig":"29"},{"size":3859,"mtime":1613712432315,"results":"52","hashOfConfig":"29"},{"size":3619,"mtime":1613284375541,"results":"53","hashOfConfig":"29"},{"size":1441,"mtime":1613361181747,"results":"54","hashOfConfig":"29"},{"size":1056,"mtime":1613712490423,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17sprws",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/index.js",[],["121","122"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/App.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/reportWebVitals.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientAdd.js",["123"],"import React, {useState} from \"react\";\nimport {Container, Row, Col, Navbar, Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport '../../styles/clients.css';\n\nconst axios = require('axios');\n\nconst ClientForm = props => {\n    const [alert, setAlert] = useState(false);\n    const [formData, setFormData] = useState({name: \"\", image: \"\", phone: \"\", email: \"\", addr1: \"\", addr2: \"\", city: \"\", state: \"\", pin: \"\", country: \"India\" });\n\n    const submitFormData = async () => {\n        try {\n            const response = await axios.post('/client', formData);\n            if(response.data.success == true){\n                setAlert(true);\n            }\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setFormData({name: \"\", image: \"\", phone: \"\", email: \"\", addr1: \"\", addr2: \"\", city: \"\", state: \"\", pin: \"\", country: \"India\" });\n        }\n    }\n\n    return (\n        <>\n        {alert?<SweetAlert\n  success\n  title=\"Success!\"\n  onConfirm={()=>setAlert(false)}\n  onCancel={()=>setAlert(false)}\n  timeout={5000}\n>\n  New customer Added Successfully!\n</SweetAlert>:\"\"}\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Create new client</Navbar.Brand>\n                        </Navbar>\n                        <br/>\n                        <Container>\n                            <Form>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter name\" value={formData.name} onChange={e => setFormData({ ...formData, name: e.target.value })} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Image URL</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter Image URL\" value={formData.image} onChange={e => setFormData({ ...formData, image: e.target.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Phone</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter phone\" value={formData.phone} onChange={e => setFormData({ ...formData, phone: e.target.value })} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={formData.email} onChange={e => setFormData({ ...formData, email: e.target.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group controlId=\"formGridAddress1\">\n                                    <Form.Label>Address 1</Form.Label>\n                                    <Form.Control placeholder=\"1234 Main St\" value={formData.addr1} onChange={e => setFormData({ ...formData, addr1: e.target.value })} />\n                                </Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridAddress2\">\n                                        <Form.Label>Address 2</Form.Label>\n                                        <Form.Control placeholder=\"Apartment, studio, or floor\" value={formData.addr2} onChange={e => setFormData({ ...formData, addr2: e.target.value })} />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGridCity\">\n                                        <Form.Label>City</Form.Label>\n                                        <Form.Control value={formData.city} onChange={e => setFormData({ ...formData, city: e.target.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue={formData.state} onChange={e => setFormData({ ...formData, state: e.target.value })} >\n                                        <option>Choose...</option>\n                                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\n                                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\n                                        <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\n                                        <option value=\"Assam\">Assam</option>\n                                        <option value=\"Bihar\">Bihar</option>\n                                        <option value=\"Chandigarh\">Chandigarh</option>\n                                        <option value=\"Chhattisgarh\">Chhattisgarh</option>\n                                        <option value=\"Dadar and Nagar Haveli\">Dadar and Nagar Haveli</option>\n                                        <option value=\"Daman and Diu\">Daman and Diu</option>\n                                        <option value=\"Delhi\">Delhi</option>\n                                        <option value=\"Lakshadweep\">Lakshadweep</option>\n                                        <option value=\"Puducherry\">Puducherry</option>\n                                        <option value=\"Goa\">Goa</option>\n                                        <option value=\"Gujarat\">Gujarat</option>\n                                        <option value=\"Haryana\">Haryana</option>\n                                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\n                                        <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\n                                        <option value=\"Jharkhand\">Jharkhand</option>\n                                        <option value=\"Karnataka\">Karnataka</option>\n                                        <option value=\"Kerala\">Kerala</option>\n                                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\n                                        <option value=\"Maharashtra\">Maharashtra</option>\n                                        <option value=\"Manipur\">Manipur</option>\n                                        <option value=\"Meghalaya\">Meghalaya</option>\n                                        <option value=\"Mizoram\">Mizoram</option>\n                                        <option value=\"Nagaland\">Nagaland</option>\n                                        <option value=\"Odisha\">Odisha</option>\n                                        <option value=\"Punjab\">Punjab</option>\n                                        <option value=\"Rajasthan\">Rajasthan</option>\n                                        <option value=\"Sikkim\">Sikkim</option>\n                                        <option value=\"Tamil Nadu\">Tamil Nadu</option>\n                                        <option value=\"Telangana\">Telangana</option>\n                                        <option value=\"Tripura\">Tripura</option>\n                                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n                                        <option value=\"Uttarakhand\">Uttarakhand</option>\n                                        <option value=\"West Bengal\">West Bengal</option>\n                                    </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                    <Form.Label>PIN</Form.Label>\n                                    <Form.Control value={formData.pin} onChange={e => setFormData({ ...formData, pin: e.target.value })} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                    <Form.Label>Country</Form.Label>\n                                    <Form.Control value=\"India\" readOnly/>\n                                    </Form.Group>\n                                </Form.Row>\n                                <Button variant=\"primary\" onClick={submitFormData}>\n                                    Create Client\n                                </Button>\n                            </Form>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  const ClientAdd = withRouter(ClientForm);\n  export default ClientAdd;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/dashboard/Dashboard.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/Clients.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientSingle.js",["124","125","126"],"import React, { useState, useEffect } from \"react\";\nimport {Container, Row, Col, Navbar, ListGroup, Image, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport CSATD from \"../charts/csat_doughnut\";\nimport CSATL from \"../charts/csat_line\";\nimport ACTA from \"../charts/activity_area\";\nimport '../../styles/clients.css';\n\nconst axios = require('axios');\n\nconst ClientData = props => {\n    const [clientInfo, setClientInfo] = useState({loading: true});\n\n    const getClientData = async () => {\n        try {\n            const response = await axios.get('/client/'+props.match.params.id);\n            setClientInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const parseCsat = (sentiment) => {\n        if(sentiment<-1) {\n            return 0;\n        }\n        if(sentiment>1) {\n            return 5;\n        }\n        return ((sentiment+1)*2.5).toFixed(2);\n    }\n\n    useEffect(() => {\n        getClientData();\n    }, [])\n    \n    return (\n        <>\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Client #{props.match.params.id}</Navbar.Brand>\n                        </Navbar>\n                        <Container>\n                            <Row>\n                                <Col md={3}>\n                                    <Image src={clientInfo.loading===true?\"\":clientInfo.basic.image} style={{maxHeight: '200px'}} thumbnail/>\n                                </Col>\n                                <Col md={6}>\n                                    <b>{clientInfo.loading===true?\"\":clientInfo.basic.name}</b><br/>\n                                    <i className=\"fa fa-envelope\"></i> Mail: {clientInfo.loading===true?\"\":clientInfo.basic.email}<br/>\n                                    <i className=\"fa fa-phone\"></i> Phone: {clientInfo.loading===true?\"\":clientInfo.basic.phone}<br/>\n                                    <i className=\"fa fa-home\"></i> City: {clientInfo.loading===true?\"\":clientInfo.basic.city+\", \"+clientInfo.basic.state}<br/>\n                                    <i className=\"fas fa-smile-wink\"></i> CSAT Index: {clientInfo.loading===true?\"\":parseCsat(clientInfo.basic.csat)}  <br/>\n                                    <i className=\"fas fa-chart-line\"></i> Purchase Activity: <font style={clientInfo.loading===true?{}:(clientInfo.purchaseCount>24)?{color: 'green'}:(clientInfo.purchaseCount>12)?{color: 'orange'}:{color: 'red'}} >{clientInfo.loading===true?\"\":(clientInfo.purchaseCount>24)?\"High\":(clientInfo.purchaseCount>12)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                    <i className=\"fa fa-star\"></i> Priority: <font style={clientInfo.loading===true?{}:(clientInfo.purchaseCount>24 && clientInfo.totalRevenue>60000)?{color: 'green'}:(clientInfo.purchaseCount>12 || clientInfo.totalRevenue>30000)?{color: 'orange'}:{color: 'red'}} >{clientInfo.loading===true?\"\":(clientInfo.purchaseCount>24 && clientInfo.totalRevenue>60000)?\"High\":(clientInfo.purchaseCount>12 || clientInfo.totalRevenue>30000)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                </Col>\n                                <Col md={3}>\n                                    {clientInfo.loading===true?\"\":<CSATD data={clientInfo.overall_csat} /> }\n                                    <b>Overall Sentiment Score</b>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={6}>\n                                    <b>Customer Satisfaction History</b> \n                                    <CSATL data={clientInfo.csatHistoryChartData}/>\n                                </Col>\n                                <Col md={6}>\n                                    <b>Purchase Activity</b>\n                                    <ACTA data={clientInfo.purchaseActivityChartData}/>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={12}>\n                                    <b>Feedback History</b>\n                                    <Table striped bordered hover>\n                                        <thead>\n                                            <tr>\n                                            <th>Image</th>\n                                            <th>Product</th>\n                                            <th>Sentiment Score</th>\n                                            <th>Time</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                        {clientInfo.loading===true?<tr><td></td><td></td><td></td><td></td></tr>:clientInfo.feedbackHistory.map((item, i) => {\n                                            return [\n                                                <tr key={i}>\n                                                <td style={{textAlign: 'center'}}><img src={item.image} height=\"20px\" /></td> \n                                                <td>{item.name.length > 70? item.name.substr(0, 69)+\"...\":item.name}</td>\n                                                <td>{item.csat}</td>\n                                                <td>{item.created_at}</td>\n                                                </tr>\n                                            ];\n                                        })}\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  \n  const ClientSingle = withRouter(ClientData);\n  export default ClientSingle;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductAdd.js",["127"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientEdit.js",["128","129"],"import React, {useState} from \"react\";\nimport {Container, Row, Col, Navbar, Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport '../../styles/clients.css';\n\nconst ClientForm = props => {\n    const [alert, setAlert] = useState(null);\n\n    return (\n        <>\n        {alert}\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Edit client</Navbar.Brand>\n                        </Navbar>\n                        <br/>\n                        <Container>\n                            <Form>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Name</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter name\" />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Image</Form.Label>\n                                    <Form.Control type=\"file\" placeholder=\"Enter Photo\" />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Phone</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Enter phone\" />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Group controlId=\"formGridAddress1\">\n                                    <Form.Label>Address 1</Form.Label>\n                                    <Form.Control placeholder=\"1234 Main St\" />\n                                </Form.Group>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridAddress2\">\n                                        <Form.Label>Address 2</Form.Label>\n                                        <Form.Control placeholder=\"Apartment, studio, or floor\" />\n                                    </Form.Group>\n                                    <Form.Group controlId=\"formGridCity\">\n                                        <Form.Label>City</Form.Label>\n                                        <Form.Control />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridState\">\n                                    <Form.Label>State</Form.Label>\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\">\n                                        <option>Choose...</option>\n                                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\n                                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\n                                        <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\n                                        <option value=\"Assam\">Assam</option>\n                                        <option value=\"Bihar\">Bihar</option>\n                                        <option value=\"Chandigarh\">Chandigarh</option>\n                                        <option value=\"Chhattisgarh\">Chhattisgarh</option>\n                                        <option value=\"Dadar and Nagar Haveli\">Dadar and Nagar Haveli</option>\n                                        <option value=\"Daman and Diu\">Daman and Diu</option>\n                                        <option value=\"Delhi\">Delhi</option>\n                                        <option value=\"Lakshadweep\">Lakshadweep</option>\n                                        <option value=\"Puducherry\">Puducherry</option>\n                                        <option value=\"Goa\">Goa</option>\n                                        <option value=\"Gujarat\">Gujarat</option>\n                                        <option value=\"Haryana\">Haryana</option>\n                                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\n                                        <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\n                                        <option value=\"Jharkhand\">Jharkhand</option>\n                                        <option value=\"Karnataka\">Karnataka</option>\n                                        <option value=\"Kerala\">Kerala</option>\n                                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\n                                        <option value=\"Maharashtra\">Maharashtra</option>\n                                        <option value=\"Manipur\">Manipur</option>\n                                        <option value=\"Meghalaya\">Meghalaya</option>\n                                        <option value=\"Mizoram\">Mizoram</option>\n                                        <option value=\"Nagaland\">Nagaland</option>\n                                        <option value=\"Odisha\">Odisha</option>\n                                        <option value=\"Punjab\">Punjab</option>\n                                        <option value=\"Rajasthan\">Rajasthan</option>\n                                        <option value=\"Sikkim\">Sikkim</option>\n                                        <option value=\"Tamil Nadu\">Tamil Nadu</option>\n                                        <option value=\"Telangana\">Telangana</option>\n                                        <option value=\"Tripura\">Tripura</option>\n                                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n                                        <option value=\"Uttarakhand\">Uttarakhand</option>\n                                        <option value=\"West Bengal\">West Bengal</option>\n                                    </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                    <Form.Label>PIN</Form.Label>\n                                    <Form.Control />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridZip\">\n                                    <Form.Label>Country</Form.Label>\n                                    <Form.Control value=\"India\" readOnly/>\n                                    </Form.Group>\n                                </Form.Row>\n                                <Button variant=\"primary\" type=\"submit\">\n                                    Save Changes\n                                </Button>\n                            </Form>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  const ClientEdit = withRouter(ClientForm);\n  export default ClientEdit;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/Products.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackAdd.js",["130","131","132"],"import React, {useState, useEffect} from \"react\";\nimport Select from \"react-select\";\nimport {Container, Row, Col, Navbar, Form, Button } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport '../../styles/clients.css';\n\nconst axios = require('axios');\n\nconst ClientForm = props => {\n    const [alert, setAlert] = useState(false);\n    const [formData, setFormData] = useState({customer: \"\", product: \"\", comment: \"\", chat: \"\", imageLink: \"\", audioLink: \"\", videoLink: \"\"});\n\n    const [customerSelect, setCustomerSelect] = useState([]);\n    const [productSelect, setProductSelect] = useState([]);\n\n    const getCustomerSelect = async () => {\n        try {\n            const response = await axios.get('/clientselect');\n            if(response.data.success == true){\n                setCustomerSelect(response.data.options);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const getProductSelect = async () => {\n        try {\n            const response = await axios.get('/productselect');\n            if(response.data.success == true){\n                setProductSelect(response.data.options);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const submitFormData = async () => {\n        try {\n            const response = await axios.post('/feedback', formData);\n            if(response.data.success == true){\n                setAlert(true);\n            }\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setFormData({customer: \"\", product: \"\", comment: \"\", chat: \"\", imageLink: \"\", audioLink: \"\", videoLink: \"\"});\n\n        }\n    }\n\n    useEffect(() => {\n        document.title = \"Create Feedback | Inframind\";\n        getCustomerSelect();\n        getProductSelect();\n    }, []);\n\n    return (\n        <>\n        {alert?<SweetAlert\n  success\n  title=\"Success!\"\n  onConfirm={()=>setAlert(false)}\n  onCancel={()=>setAlert(false)}\n  timeout={5000}\n>\n  New Feedback Added Successfully!\n</SweetAlert>:\"\"}\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Create new Feedback</Navbar.Brand>\n                        </Navbar>\n                        <br/>\n                        <Container>\n                            <Form>\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                                    <Form.Label>Customer</Form.Label>\n                                    <Select isSearchable={true} noOptionsMessage=\"Loading...\" defaultValue={formData.customer} options={customerSelect} onChange={(e) => setFormData({ ...formData, customer: e.value })} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"formGridPassword\">\n                                    <Form.Label>Product</Form.Label>\n                                    <Select isSearchable={true} noOptionsMessage=\"Loading...\" defaultValue={formData.product} options={productSelect} onChange={(e) => setFormData({ ...formData, product: e.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Comment Text</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={3} value={formData.comment} onChange={e => setFormData({ ...formData, comment: e.target.value })} />\n                                    </Form.Group>\n\n                                    <Form.Group as={Col} controlId=\"exampleForm.ControlTextarea1\">\n                                        <Form.Label>Chat Text</Form.Label>\n                                        <Form.Control as=\"textarea\" rows={3} value={formData.chat} onChange={e => setFormData({ ...formData, chat: e.target.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Form.Row>\n                                    <Form.Group as={Col} controlId=\"formGridAddress1\">\n                                        <Form.Label>Image Link</Form.Label>\n                                        <Form.Control placeholder=\"\" value={formData.imageLink} onChange={e => setFormData({ ...formData, imageLink: e.target.value })} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridAddress2\">\n                                        <Form.Label>Video Link</Form.Label>\n                                        <Form.Control placeholder=\"\" value={formData.videoLink} onChange={e => setFormData({ ...formData, videoLink: e.target.value })} />\n                                    </Form.Group>\n                                    <Form.Group as={Col} controlId=\"formGridCity\">\n                                        <Form.Label>Audio Link</Form.Label>\n                                        <Form.Control value={formData.audioLink} onChange={e => setFormData({ ...formData, audioLink: e.target.value })} />\n                                    </Form.Group>\n                                </Form.Row>\n\n                                <Button variant=\"primary\" onClick={submitFormData}>\n                                    Create Feedback\n                                </Button>\n                            </Form>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  const ClientAdd = withRouter(ClientForm);\n  export default ClientAdd;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/about/About.js",["133","134","135","136","137"],"import React, { useState, useEffect} from \"react\";\nimport axios from 'axios';\nimport {Card, CardDeck } from \"react-bootstrap\";\nimport {Container, Row, Col } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport CSATD from \"../charts/csat_doughnut\";\nimport '../../styles/dashboard.css';\n\nconst About = props => {\n    const [info, setInfo] = useState({loading: true});\n\n    const getDashboardData = async () => {\n        try {\n            const response = await axios.get('/dashboard');\n            setInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        document.title = \"About\";\n    }, [])\n\n    return (\n        <>\n         <Container fluid>\n                <Row>\n                    <Col xs={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col  xs={10} id=\"page-content-wrapper\"  style={{textAlign: 'center'}}>\n                        <h1>Enterprise AI</h1>\n                        A Project developed for TCS Inframind Competition<br/>\n                        <div style={{fontSize: '50px'}}>\n                            <i style={{color: '#FF0000'}} class=\"fa fa-youtube\" ></i>&nbsp;\n                            <i style={{color: '#4078c0'}} class=\"fa fa-github\" ></i>&nbsp;\n                            <i style={{color: '#FE001A'}} class=\"fa fa-file-pdf-o\" ></i> \n                        </div><br/>\n                        <div style={{border: '1px solid #ccc', borderRadius: '25px', padding: '20px', marginLeft: '350px', marginRight: '350px' }}>\n                        Languages &amp; tools used<br/>\n                        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/1280px-React-icon.svg.png\" alt=\"React\" width=\"60px\" />\n                        <img src=\"https://banner2.cleanpng.com/20180809/hvf/kisspng-flask-by-example-web-framework-python-bottle-sebastian-estenssoro-5b6c0aa33b3b57.9170119715338072672426.jpg\" alt=\"Flask\" width=\"60px\" />\n                        <img src=\"https://pbs.twimg.com/profile_images/1255113654049128448/J5Yt92WW_400x400.png\" alt=\"MySQL\" width=\"60px\" />\n                        </div><br/>\n                        Designed &amp; developed by<br/> <b>Tirtharaj Ghosh</b>\n                        <div style={{fontSize: '20px'}}>\n                            <i style={{color: '#4267B2'}} class=\"fa fa-facebook\" ></i>&nbsp;\n                            <i style={{color: '#00acee'}} class=\"fa fa-twitter\" ></i>&nbsp;\n                            <i style={{color: '#0e76a8'}} class=\"fa fa-linkedin\" ></i>&nbsp;\n                            <i style={{color: '#F48024'}} class=\"fa fa-stack-overflow\" ></i>&nbsp;\n                            <i style={{color: '#4078c0'}} class=\"fa fa-github\" ></i>  \n                        </div>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  const AboutUs = withRouter(About);\n  export default AboutUs","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductSingle.js",["138","139","140"],"import React, { useState, useEffect } from \"react\";\nimport {Container, Row, Col, Navbar, ListGroup, Image, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport CSATD from \"../charts/csat_doughnut\";\nimport CSATL from \"../charts/csat_line\";\nimport ACTA from \"../charts/activity_area\";\nimport '../../styles/clients.css';\n\nconst axios = require('axios');\n\nconst ProductData = props => {\n    const [productInfo, setProductInfo] = useState({loading: true});\n\n    const getProductData = async () => {\n        try {\n            const response = await axios.get('/product/'+props.match.params.id);\n            setProductInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        getProductData();\n    }, [])\n    \n    return (\n        <>\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Product #{props.match.params.id}</Navbar.Brand>\n                        </Navbar>\n                        <Container>\n                            <Row>\n                                <Col md={3}>\n                                    <Image src={productInfo.loading===true?\"\":productInfo.basic.image} style={{maxHeight: '200px'}} thumbnail/>\n                                </Col>\n                                <Col md={6}>\n                                    <b>{productInfo.loading===true?\"\":productInfo.basic.name}</b><br/>\n                                    <i className=\"fa fa-money\"></i> Price: {productInfo.loading===true?\"\":\"Rs. \"+productInfo.basic.price+\".00\"}<br/>\n                                    <i className=\"fa fa-bars\"></i> Quantity: {productInfo.loading===true?\"\":productInfo.basic.quantity}<br/>\n                                    <i className=\"fa fa-twitter\"></i> Twitter Handle: {productInfo.loading===true?\"\":<a style={{color: \"#0CACEE\"}} href={\"https://twitter.com/hashtag/\"+productInfo.basic.hashtag} target=\"_blank\">{\"#\"+productInfo.basic.hashtag}</a>}<br/>\n                                    <i className=\"fas fa-smile-wink\"></i> CSAT Index: {productInfo.loading===true?\"\":productInfo.basic.csat}  <br/>\n                                    <i className=\"fas fa-chart-line\"></i> Purchase Activity: <font style={productInfo.loading===true?{}:(productInfo.purchaseCount>24)?{color: 'green'}:(productInfo.purchaseCount>12)?{color: 'orange'}:{color: 'red'}} >{productInfo.loading===true?\"\":(productInfo.purchaseCount>24)?\"High\":(productInfo.purchaseCount>12)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                    {/* <i className=\"fa fa-star\"></i> Priority: <font style={productInfo.loading===true?{}:(productInfo.purchaseCount>24 && productInfo.totalRevenue>60000)?{color: 'green'}:(productInfo.purchaseCount>12 || productInfo.totalRevenue>30000)?{color: 'orange'}:{color: 'red'}} >{productInfo.loading===true?\"\":(productInfo.purchaseCount>24 && productInfo.totalRevenue>60000)?\"High\":(productInfo.purchaseCount>12 || productInfo.totalRevenue>30000)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/> */}\n                                </Col>\n                                <Col md={3}>\n                                    {productInfo.loading===true?\"\":<CSATD data={productInfo.overall_csat} /> }\n                                    <b>Overall Sentiment Score</b>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={6}>\n                                    <b>Customer Satisfaction History</b> \n                                    <CSATL data={productInfo.csatHistoryChartData}/>\n                                </Col>\n                                <Col md={6}>\n                                    <b>Purchase Activity</b>\n                                    <ACTA data={productInfo.purchaseActivityChartData}/>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={9}>\n                                    <b>Feedback History</b>\n                                    <Table striped bordered hover>\n                                        <thead>\n                                            <tr>\n                                            <th>#</th>\n                                            <th>Product</th>\n                                            <th>Sentiment Score</th>\n                                            <th>Time</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                        {productInfo.loading===true?<tr><td></td><td></td><td></td><td></td></tr>:productInfo.feedbackHistory.map((item, i) => {\n                                            return [\n                                                <tr key={i}>\n                                                <td style={{textAlign: 'center'}}>{i+1}</td> \n                                                <td>{item.name.length > 50? item.name.substr(0, 49)+\"...\":item.name}</td>\n                                                <td>{item.csat}</td>\n                                                <td>{item.created_at}</td>\n                                                </tr>\n                                            ];\n                                        })}\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                                <Col md={3}>\n                                    <b>Twitter Feedback</b>\n                                    {productInfo.loading===true?\"\":<CSATD data={[productInfo.twitterAnalysis.positive,0,productInfo.twitterAnalysis.neutral,0,productInfo.twitterAnalysis.negative]} /> }\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  \n  const ProductSingle = withRouter(ProductData);\n  export default ProductSingle;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductEdit.js",["141","142"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackEdit.js",["143","144"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackSingle.js",["145","146","147","148","149","150"],"import React, { useState, useEffect } from \"react\";\nimport {Container, Row, Col, Navbar, ListGroup, Image, Table } from \"react-bootstrap\";\nimport { withRouter } from \"react-router\";\nimport Sidebar from \"../sidebar/Sidebar.js\";\nimport GaugeChart from \"../charts/gauge_chart\";\nimport '../../styles/clients.css';\n\nconst axios = require('axios');\n\nconst FeedbackData = props => {\n    const [feedbackInfo, setFeedInfo] = useState({loading: true});\n    const [clientInfo, setClientInfo] = useState({loading: true});\n    const [productInfo, setProductInfo] = useState({loading: true});\n\n    const getClientData = async (cid) => {\n        try {\n            const response = await axios.get('/client/'+cid);\n            setClientInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const getProductData = async (pid) => {\n        try {\n            const response = await axios.get('/product/'+pid);\n            setProductInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const getFeedbackData = async () => {\n        try {\n            const response = await axios.get('/feedback/'+props.match.params.id);\n            getClientData(response.data.cid);\n            getProductData(response.data.pid);\n            setFeedInfo(Object.assign({loading: false} , response.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        getFeedbackData();\n        document.title = \"Feedback #\"+props.match.params.id+\" | Inframind\";\n    }, [])\n    \n    return (\n        <>\n         <Container fluid>\n                <Row>\n                    <Col md={2} id=\"sidebar-wrapper\">      \n                      <Sidebar />\n                    </Col>\n                    <Col md={10} id=\"page-content-wrapper\">\n                        <Navbar bg=\"light\" variant=\"light\">\n                            <Navbar.Brand href=\"#home\">Feedback #{props.match.params.id}</Navbar.Brand>\n                        </Navbar>\n                        <Container>\n                            <Row>\n                                <Col md={3}>\n                                    <Image src={clientInfo.loading===true?\"\":clientInfo.basic.image} style={{maxHeight: '200px'}} thumbnail/>\n                                </Col>\n                                <Col md={3}>\n                                    <b>{clientInfo.loading===true?\"\":clientInfo.basic.name}</b><br/>\n                                    <i className=\"fa fa-envelope\"></i> Mail: {clientInfo.loading===true?\"\":clientInfo.basic.email}<br/>\n                                    <i className=\"fa fa-phone\"></i> Phone: {clientInfo.loading===true?\"\":clientInfo.basic.phone}<br/>\n                                    <i className=\"fa fa-home\"></i> City: {clientInfo.loading===true?\"\":clientInfo.basic.city+\", \"+clientInfo.basic.state}<br/>\n                                    <i className=\"fas fa-smile-wink\"></i> CSAT Index: {clientInfo.loading===true?\"\":clientInfo.basic.csat}  <br/>\n                                    <i className=\"fas fa-chart-line\"></i> Purchase Activity: <font style={clientInfo.loading===true?{}:(clientInfo.purchaseCount>24)?{color: 'green'}:(clientInfo.purchaseCount>12)?{color: 'orange'}:{color: 'red'}} >{clientInfo.loading===true?\"\":(clientInfo.purchaseCount>24)?\"High\":(clientInfo.purchaseCount>12)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                    <i className=\"fa fa-star\"></i> Priority: <font style={clientInfo.loading===true?{}:(clientInfo.purchaseCount>24 && clientInfo.totalRevenue>60000)?{color: 'green'}:(clientInfo.purchaseCount>12 || clientInfo.totalRevenue>30000)?{color: 'orange'}:{color: 'red'}} >{clientInfo.loading===true?\"\":(clientInfo.purchaseCount>24 && clientInfo.totalRevenue>60000)?\"High\":(clientInfo.purchaseCount>12 && clientInfo.totalRevenue>30000)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                </Col>\n                                <Col md={3}>\n                                <Image src={productInfo.loading===true?\"\":productInfo.basic.image} style={{maxHeight: '200px'}} thumbnail/>\n                                </Col>\n                                <Col md={3}>\n                                    <b>{productInfo.loading===true?\"\":productInfo.basic.name}</b><br/>\n                                    <i className=\"fa fa-money\"></i> Price: {productInfo.loading===true?\"\":\"Rs. \"+productInfo.basic.price+\".00\"}<br/>\n                                    <i className=\"fa fa-bars\"></i> Quantity: {productInfo.loading===true?\"\":productInfo.basic.quantity}<br/>\n                                    <i className=\"fa fa-twitter\"></i> Twitter Handle: {productInfo.loading===true?\"\":<a style={{color: \"#0CACEE\"}} href={\"https://twitter.com/hashtag/\"+productInfo.basic.hashtag} target=\"_blank\">{\"#\"+productInfo.basic.hashtag}</a>}<br/>\n                                    <i className=\"fas fa-smile-wink\"></i> CSAT Index: {productInfo.loading===true?\"\":productInfo.basic.csat}  <br/>\n                                    <i className=\"fas fa-chart-line\"></i> Purchase Activity: <font style={productInfo.loading===true?{}:(productInfo.purchaseCount>24)?{color: 'green'}:(productInfo.purchaseCount>12)?{color: 'orange'}:{color: 'red'}} >{productInfo.loading===true?\"\":(productInfo.purchaseCount>24)?\"High\":(productInfo.purchaseCount>12)?\"Normal\":\"Low\"} <i className=\"fas fa-square\"></i></font><br/>\n                                    \n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col md={6}>\n                                    <b>Feedback Details</b> \n                                    <Table striped bordered hover>\n                                        <thead>\n                                            <tr>\n                                            <th>Type</th>\n                                            <th>Details</th>\n                                            <th>Sentiment</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                        {feedbackInfo.loading===true?<tr><td></td><td></td><td></td></tr>:\n                                            <>\n                                            <tr key={1}>\n                                                <td style={{textAlign: 'center'}}>Comment</td> \n                                                <td>{feedbackInfo.comment.length > 50? feedbackInfo.comment.substr(0, 49)+\"...\":feedbackInfo.comment}</td>\n                                                <td>{feedbackInfo.comment_csat}</td>\n                                            </tr>\n                                            <tr key={2}>\n                                                <td style={{textAlign: 'center'}}>Chat</td> \n                                                <td>{feedbackInfo.chat_text.length > 50? feedbackInfo.chat_text.substr(0, 49)+\"...\":feedbackInfo.chat_text}</td>\n                                                <td>{feedbackInfo.chat_csat}</td>\n                                            </tr>\n                                            <tr key={3}>\n                                                <td style={{textAlign: 'center'}}>Image</td> \n                                                <td>{feedbackInfo.image?<a style={{color: \"blue\"}} href={feedbackInfo.image} target=\"_blank\" >Open <i class=\"fa fa-external-link-alt\"></i></a>:null}</td>\n                                                <td>{feedbackInfo.image_csat}</td>\n                                            </tr>\n                                            <tr key={4}>\n                                                <td style={{textAlign: 'center'}}>Audio</td> \n                                                <td>{feedbackInfo.audio?<a style={{color: \"blue\"}} href={feedbackInfo.audio} target=\"_blank\" >Open <i class=\"fa fa-external-link-alt\"></i></a>:null}</td>\n                                                <td>{feedbackInfo.audio_csat}</td>\n                                            </tr>\n                                            <tr key={1}>\n                                                <td style={{textAlign: 'center'}}>Video</td> \n                                                <td>{feedbackInfo.video?<a style={{color: \"blue\"}} href={feedbackInfo.video} target=\"_blank\" >Open <i class=\"fa fa-external-link-alt\"></i></a>:null}</td>\n                                                <td>{feedbackInfo.video_csat}</td>\n                                            </tr>\n                                            </>\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </Col>\n                                <Col md={6}>\n                                    <b>Overall Customer Satisfaction</b><br/>\n                                    <b style={{fontSize: '50px'}}>{feedbackInfo.csat}</b>\n                                    <GaugeChart value={feedbackInfo.csat}/>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </Col> \n                </Row>\n\n            </Container>\n        </>\n        );\n  };\n  \n  const FeedbackSingle = withRouter(FeedbackData);\n  export default FeedbackSingle;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/Feedbacks.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/sidebar/Sidebar.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/products/ProductList.js",["151","152","153"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/csat_doughnut.js",["154"],"import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Cell, Tooltip\n} from 'recharts';\n\nconst COLORS = ['#65E50B', '#B0E50B', '#E5DB0B', '#E5990B', '#E5470B'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  if(percent!=0){\n    return (\n      <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  }\n  return;\n  \n};\n\nexport default class CSATD extends PureComponent {\n  constructor(props) {\n    super(props);\n    console.log(props);\n    this.state = {data:[\n      { name: 'Very Positive', value: props.data[0] },\n      { name: 'Positive', value: props.data[1] },\n      { name: 'Neutral', value: props.data[2] },\n      { name: 'Negative', value: props.data[3] },\n      { name: 'Very Negative', value: props.data[4] },\n    ]};\n  }\n\n  render() {\n    return (\n      <PieChart width={180} height={180}>\n        <Pie\n          data={this.state.data}\n          cx={90}\n          cy={90}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\" \n          nameKey=\"name\"\n        >\n          {\n            this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n        <Tooltip/>\n      </PieChart>\n    );\n  }\n}\n","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/csat_line.js",["155"],"import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default class CSATL extends PureComponent {\n\n  render() {\n    return (\n      <div>\n        <LineChart\n          width={500}\n          height={200}\n          data={this.props.data}\n          margin={{\n            top: 10, right: 30, left: 0, bottom: 0,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"Month\" />\n          <YAxis domain={[-1, 1]} />\n          <Tooltip />\n          <Line connectNulls type=\"monotone\" dataKey=\"Sentiment\" stroke=\"#8884d8\" fill=\"#8884d8\" />\n        </LineChart>\n      </div>\n    );\n  }\n}\n","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/activity_area.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/charts/gauge_chart.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/feedbacks/FeedbackList.js",["156"],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/clients/ClientList.js",["157"],"import BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport Cmoji from '../utils/csatEmoji';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport 'react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css';\nconst { SearchBar } = Search;\n\n\nconst axios = require('axios');\n\n\nconst DataTable = (props) => {\n    const [clients, setClients] = useState([]);\n    \n\n    const getClientData = async () => {\n        try {\n            const response = await axios.get('/client');\n            console.log(response.data);\n            setClients(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    const csatIcon = (cell, row, rowIndex, formatExtraData) => {\n        return (<Cmoji value={cell} />);\n    };\n\n    const formatDate = (cell, row, rowIndex, formatExtraData) => {\n        console.log(cell);\n        var date = (cell==null)? \"No Purchase\" : cell.split(\" \").slice(0,4).join(\" \");\n        return (date);\n    };\n    \n    const viewButton = (cell, row, rowIndex, formatExtraData) => {\n        let link = \"/client/view/\"+row.cid;\n        console.log(row);\n        return (\n          <Button href={link} variant=\"primary\" >\n            View\n          </Button>\n        );\n    };\n\n    const editButton = (cell, row, rowIndex, formatExtraData) => {\n        let link = \"/client/edit/\"+row.cid;\n        console.log(row);\n        return (\n          <Button href={link} variant=\"warning\" style={{color: 'white'}}>\n            Edit\n          </Button>\n        );\n    };\n\n    const deleteButton = (cell, row, rowIndex, formatExtraData) => {\n        let link = \"/client/\"+rowIndex;\n        console.log(row);\n        return (\n          <Button onClick={()=>props.handleAlert(row.cid)} variant=\"danger\" >\n            Delete\n          </Button>\n        );\n    };\n    \n\n    const columns = [{\n        dataField: 'name',\n        text: 'Name'\n      }, {\n        dataField: 'city',\n        text: 'Location'\n      }, {\n        dataField: 'csat',\n        text: 'CSAT',\n        formatter: csatIcon\n      }, {\n        dataField: 'lp',\n        text: 'Last Purchased',\n        formatter: formatDate\n      }, {\n        dataField: \"view\",\n        text: \"Action\",\n        formatter: viewButton,\n      }, {\n        dataField: \"edit\",\n        text: \"Action\",\n        formatter: editButton,\n      }, {\n        dataField: \"delete\",\n        text: \"Action\",\n        formatter: deleteButton,\n      }];\n\n      useEffect(() => {\n          getClientData();\n      }, [])\n\n    //   return (<BootstrapTable keyField='name' data={ clients } columns={ columns } pagination={ paginationFactory()} />);\n\n      return (\n        <>\n        <ToolkitProvider\n            keyField=\"name\"\n            data={ clients }\n            columns={ columns }\n            pagination={ paginationFactory()}\n            search\n        >\n            {\n            props => (\n                <div>\n                    <hr />\n                <SearchBar { ...props.searchProps } />\n                <Button href=\"/client/create\" className=\"float-right\" variant=\"success\">Add New</Button>\n                <BootstrapTable\n                    { ...props.baseProps }\n                    pagination={ paginationFactory()}/>\n                </div>\n            )\n            }\n        </ToolkitProvider>\n        {alert}\n        </>\n      );\n} \n\nexport default DataTable;","/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/utils/csatEmoji.js",[],"/home/tirtharajghosh/Desktop/Inframind/Enterprise-AI/frontend/src/components/utils/sentEmoji.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":17,"column":38,"nodeType":"164","messageId":"165","endLine":17,"endColumn":40},{"ruleId":"166","severity":1,"message":"167","line":2,"column":38,"nodeType":"168","messageId":"169","endLine":2,"endColumn":47},{"ruleId":"170","severity":1,"message":"171","line":36,"column":8,"nodeType":"172","endLine":36,"endColumn":10,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":94,"column":83,"nodeType":"176","endLine":94,"endColumn":121},{"ruleId":"162","severity":1,"message":"163","line":17,"column":38,"nodeType":"164","messageId":"165","endLine":17,"endColumn":40},{"ruleId":"166","severity":1,"message":"177","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":18},{"ruleId":"166","severity":1,"message":"178","line":9,"column":19,"nodeType":"168","messageId":"169","endLine":9,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":21,"column":38,"nodeType":"164","messageId":"165","endLine":21,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":32,"column":38,"nodeType":"164","messageId":"165","endLine":32,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":43,"column":38,"nodeType":"164","messageId":"165","endLine":43,"endColumn":40},{"ruleId":"166","severity":1,"message":"179","line":3,"column":9,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"166","severity":1,"message":"180","line":3,"column":15,"nodeType":"168","messageId":"169","endLine":3,"endColumn":23},{"ruleId":"166","severity":1,"message":"181","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":13},{"ruleId":"166","severity":1,"message":"182","line":11,"column":12,"nodeType":"168","messageId":"169","endLine":11,"endColumn":16},{"ruleId":"166","severity":1,"message":"183","line":13,"column":11,"nodeType":"168","messageId":"169","endLine":13,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":2,"column":38,"nodeType":"168","messageId":"169","endLine":2,"endColumn":47},{"ruleId":"170","severity":1,"message":"184","line":26,"column":8,"nodeType":"172","endLine":26,"endColumn":10,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":48,"column":118,"nodeType":"176","endLine":48,"endColumn":228},{"ruleId":"166","severity":1,"message":"177","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":18},{"ruleId":"166","severity":1,"message":"178","line":9,"column":19,"nodeType":"168","messageId":"169","endLine":9,"endColumn":27},{"ruleId":"166","severity":1,"message":"177","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":18},{"ruleId":"166","severity":1,"message":"178","line":9,"column":19,"nodeType":"168","messageId":"169","endLine":9,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":2,"column":38,"nodeType":"168","messageId":"169","endLine":2,"endColumn":47},{"ruleId":"170","severity":1,"message":"188","line":47,"column":8,"nodeType":"172","endLine":47,"endColumn":10,"suggestions":"189"},{"ruleId":"186","severity":1,"message":"187","line":81,"column":118,"nodeType":"176","endLine":81,"endColumn":228},{"ruleId":"186","severity":1,"message":"187","line":113,"column":73,"nodeType":"176","endLine":113,"endColumn":143},{"ruleId":"186","severity":1,"message":"187","line":118,"column":73,"nodeType":"176","endLine":118,"endColumn":143},{"ruleId":"186","severity":1,"message":"187","line":123,"column":73,"nodeType":"176","endLine":123,"endColumn":143},{"ruleId":"174","severity":1,"message":"175","line":29,"column":14,"nodeType":"176","endLine":29,"endColumn":73},{"ruleId":"166","severity":1,"message":"190","line":47,"column":11,"nodeType":"168","messageId":"169","endLine":47,"endColumn":21},{"ruleId":"166","severity":1,"message":"191","line":73,"column":13,"nodeType":"168","messageId":"169","endLine":73,"endColumn":17},{"ruleId":"162","severity":1,"message":"192","line":16,"column":13,"nodeType":"164","messageId":"165","endLine":16,"endColumn":15},{"ruleId":"166","severity":1,"message":"193","line":3,"column":58,"nodeType":"168","messageId":"169","endLine":3,"endColumn":64},{"ruleId":"166","severity":1,"message":"191","line":67,"column":13,"nodeType":"168","messageId":"169","endLine":67,"endColumn":17},{"ruleId":"166","severity":1,"message":"191","line":60,"column":13,"nodeType":"168","messageId":"169","endLine":60,"endColumn":17},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'ListGroup' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getClientData'. Either include it or remove the dependency array.","ArrayExpression",["196"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SweetAlert' is defined but never used.","'setAlert' is assigned a value but never used.","'Card' is defined but never used.","'CardDeck' is defined but never used.","'CSATD' is defined but never used.","'info' is assigned a value but never used.","'getDashboardData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProductData'. Either include it or remove the dependency array.",["197"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'getFeedbackData' and 'props.match.params.id'. Either include them or remove the dependency array.",["198"],"'formatDate' is assigned a value but never used.","'link' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getClientData]",{"range":"205","text":"206"},"Update the dependencies array to be: [getProductData]",{"range":"207","text":"208"},"Update the dependencies array to be: [getFeedbackData, props.match.params.id]",{"range":"209","text":"210"},[1075,1077],"[getClientData]",[872,874],"[getProductData]",[1641,1643],"[getFeedbackData, props.match.params.id]"]